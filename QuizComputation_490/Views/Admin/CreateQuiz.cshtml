@model QuizComputation_490_Model.CustomModels.QuizModel

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<script>
    function addQuestion() {
        let NumOfQuestions = $('.question').length;
        if (NumOfQuestions == 5) {
            return;
        }
        if (NumOfQuestions == 4) {
            $('#createQuizBtn').prop('disabled', false)
        }
        else {
            $('#createQuizBtn').prop('disabled', true)
        }

            let holder = $('#QuestionHolder');
            holder.append(`
                <div class="question  mb-5">
                    <div class="d-flex gap-4">
                        <input type="text" name="QuizQuestionList.Index" value="${NumOfQuestions + 1}" hidden/>
                        <p class=" fs-4"> ${NumOfQuestions + 1}.</p>
                        <input class = "form-control mb-3" name="QuizQuestionList[${NumOfQuestions + 1}].QuestionText" />
                    </div>
                    <div>
                        <div class="row">
                            @{
                                for (int option = 0; option < 4; option++)
                                {
                                    <div class="col-6 d-flex align-items-center gap-4 mb-4">
                                        <input hidden class = "form-control" name="QuizQuestionList[${NumOfQuestions + 1}].OptionList[@option].IsCorrect" value=false />
                                        <span class=" fs-4">(@((char)('A' + option)))</span>
                                        <input class = "form-control" name="QuizQuestionList[${NumOfQuestions + 1}].OptionList[@option].OptionText" />
                                    </div>
                                }
                            }
                            <div class="d-flex justify-content-end">
                                <select onchange="bindCorrectAnswer(${NumOfQuestions + 1}, this)">
                                    <option>Select Correct option</option>
                                    <option value=0>A</option>
                                    <option value=1>B</option>
                                    <option value=2>C</option>
                                    <option value=3>D</option>
                                </select>
                            </div>
                        </div>
                    </div>
                </div>
                <hr class="my-5"/>
            `)
        }

    function bindCorrectAnswer(QuesID, ele) {
        debugger
        let correctAns = $(ele).val();
        for (let i = 0; i < 4; i++) {
            let element = $(`[name = "QuizQuestionList[${QuesID}].OptionList[${i}].IsCorrect"]`);
            $(element).attr('value', false);
        }
        let element = $(`[name = "QuizQuestionList[${QuesID}].OptionList[${correctAns}].IsCorrect"]`);
        $(element).attr('value', true);
    }
</script>

<div class="p-5 border">
    @using (Html.BeginForm())
    {
        <h3 class="mb-4">Quiz Details</h3>
        <div class="row">
            <div class="col-12">
                <div class="form-floating mb-3">
                    @Html.TextBoxFor(m => m.QuizTitle, new { @class = "form-control", @placeholder = "" })
                    @Html.LabelFor(m => m.QuizTitle, "Quiz Title")
                    @Html.TextBoxFor(m => m.QuizID, new { @class = "form-control", @type = "hidden" })
                    @Html.ValidationMessageFor(m => m.QuizTitle, null, new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-12">
                <div class="form-floating">
                    @Html.TextAreaFor(m => m.QuizDescription, 10, 100, new { @class = "form-control", @placeholder = "" })
                    @Html.LabelFor(m => m.QuizDescription, "Quiz Description")
                    @Html.ValidationMessageFor(m => m.QuizQuestionList, null, new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <hr class="my-5" />
        <div class="d-flex justify-content-between">
            <h3>Question Details</h3>
            <button type="button" class="btn btn-primary mb-5" onclick="addQuestion()">Add Question</button>
        </div>
        <div id="QuestionHolder">
            @{
                if (Model != null && Model.QuizQuestionList != null)
                {
                    for (int item = 0; item < Model.QuizQuestionList.Count(); item++)
                    {
                        <div class="question">
                            <div class="d-flex gap-4">
                                <p class=" fs-4"> @(item + 1).</p>
                                <input type="text" name="QuizQuestionList.Index" value="@item" hidden />
                                @Html.TextBoxFor(m => m.QuizQuestionList[item].QuestionText, new { @class = "form-control mb-3" })
                                @Html.TextBoxFor(m => m.QuizQuestionList[item].QuestionID, new { @class = "form-control", @type = "hidden" })
                            </div>
                            <div>
                                <div class="row mb-5">
                                    @{
                                        for (int option = 0; option < 4; option++)
                                        {
                                            <div class="col-6 d-flex align-items-center gap-4 mb-4">
                                                @Html.TextBoxFor(m => m.QuizQuestionList[item].OptionList[option].IsCorrect, new { @class = "form-control", @type = "hidden" })
                                                <span class=" fs-4">(@((char)('A' + option)))</span>
                                                @Html.TextBoxFor(m => m.QuizQuestionList[item].OptionList[option].OptionText, new { @class = "form-control" })
                                                @Html.TextBoxFor(m => m.QuizQuestionList[item].OptionList[option].OptionID, new { @class = "form-control", @type = "hidden" })
                                            </div>
                                        }
                                    }
                                    <div class="d-flex justify-content-end">
                                        <select onchange="bindCorrectAnswer(@item, this)">
                                            <option>Select Correct option</option>
                                            @{
                                                for(int i = 0; i < 4; i++) {
                                                    if (Model.QuizQuestionList[item].OptionList[@i].IsCorrect == true)
                                                    {
                                                        <option value=@i selected>@((char)('A' + i))</option>
                                                    }
                                                    else
                                                    {
                                                        <option value=@i>@((char)('A' + i))</option>
                                                    }
                                                }                                                
                                            }
                                        </select>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                }
            }
        </div>
        <div class="d-flex justify-content-center">
            @{
                if (Model != null)
                {
                    <button type="submit" class="btn btn-success" id="createQuizBtn">Save</button>
                }
                else
                {
                    <button type="submit" class="btn btn-success" id="createQuizBtn" disabled>Create</button>
                }
            }
        </div>
    }
</div>
